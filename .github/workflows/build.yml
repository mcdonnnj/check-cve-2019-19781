---
name: build

on: [push]

env:
  PIP_CACHE_DIR: ~/.cache/pip
  PRE_COMMIT_CACHE_DIR: ~/.cache/pre-commit
  PRE_COMMIT_ALT_CACHE_DIR: ~/.cache/pre-commit-alt

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Cache pip test requirements
        uses: actions/cache@v1
        with:
          path: ${{ env.PIP_CACHE_DIR }}
          key: "${{ runner.os }}-pip-test-\
            ${{ hashFiles('**/requirements-test.txt') }}"
          restore-keys: |
            ${{ runner.os }}-pip-test-
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade -r requirements-test.txt
      - name: Cache pre-commit hooks
        uses: actions/cache@v1
        with:
          path: ${{ env.PRE_COMMIT_CACHE_DIR }}
          key: "${{ runner.os }}-pre-commit-\
            ${{ hashFiles('**/.pre-commit-config.yaml') }}"
      - name: set PRE_COMMIT_VERSION_HASH
        run: |
          echo "::set-env name=PRE_COMMIT_VERSION::\
          $(pre-commit --version | sha256sum | cut -d' ' -f1')"
      - name: Cache other pre-commit hooks
        uses: actions/cache@v1
        with:
          path: ${{ env.PRE_COMMIT_ALT_CACHE_DIR }}
          KEY: "${{ runner.os }}-pre-commit-\
            ${{ env.PRE_COMMIT_VERSION }}-\
            ${{ hashFiles('**/.pre-commit-config.yaml') }}"
      - name: Display contents of pre-commit cache.
        run: ls -alF ${{ env.PRE_COMMIT_CACHE_DIR }}
      - name: Display contents of other pre-commit cache.
        run: ls -alF ${{ env.PRE_COMMIT_ALT_CACHE_DIR }}
      - name: Run linters on all files
        run: pre-commit run --verbose --all-files
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Cache pip test requirements
        uses: actions/cache@v1
        with:
          path: ${{ env.PIP_CACHE_DIR }}
          key: "${{ runner.os }}-pip-test-\
            ${{ hashFiles('**/requirements-test.txt') }}"
          restore-keys: |
            ${{ runner.os }}-pip-test-
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade -r requirements-test.txt
      - name: Run tests
        env:
          RELEASE_TAG: ${{ github.event.release.tag_name }}
        run: pytest
      - name: Upload coverage report
        run: coveralls
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
        if: success()
  build:
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Cache pip build requirements
        uses: actions/cache@v1
        with:
          path: ${{ env.PIP_CACHE_DIR }}
          key: "${{ runner.os }}-pip-build-\
            ${{ hashFiles('**/requirements.txt') }}"
          restore-keys: |
            ${{ runner.os }}-pip-build-
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip wheel
          pip install --upgrade -r requirements.txt
      - name: Build artifacts
        run: python3 setup.py sdist bdist_wheel
      - name: Upload artifacts
        uses: actions/upload-artifact@v1
        with:
          name: dist
          path: dist
